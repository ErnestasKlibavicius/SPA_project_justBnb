## Autogenerated by Scribe. DO NOT MODIFY.

name: User
description: |-

  Routes for managing the user resource
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/user-bookings/{user_id}'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: userBookingsIndex
      description: 'Routes for managing the user resource'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer your_token'
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: at
        type: string
        custom: []
    cleanUrlParameters:
      user_id: at
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Please, attach a Bearer Token to your request","success":false}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: User
      groupDescription: |-

        Routes for managing the user resource
      subgroup: ''
      subgroupDescription: ''
      title: index
      description: 'Display a listing of the users.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer your_token'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Please, attach a Bearer Token to your request","success":false}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: User
      groupDescription: |-

        Routes for managing the user resource
      subgroup: ''
      subgroupDescription: ''
      title: Create
      description: 'Store a newly created user in storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer your_token'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters.'
        required: true
        example: fstixajyzim
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: njast@example.net
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: "#'I{f^>+5Ki5-xE^<cYZ"
        type: string
        custom: []
    cleanBodyParameters:
      name: fstixajyzim
      email: njast@example.net
      password: "#'I{f^>+5Ki5-xE^<cYZ"
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: User
      groupDescription: |-

        Routes for managing the user resource
      subgroup: ''
      subgroupDescription: ''
      title: Show
      description: 'Display the specified user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer your_token'
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Please, attach a Bearer Token to your request","success":false}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: User
      groupDescription: |-

        Routes for managing the user resource
      subgroup: ''
      subgroupDescription: ''
      title: Update
      description: 'Update the specified user in storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer your_token'
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: User
      groupDescription: |-

        Routes for managing the user resource
      subgroup: ''
      subgroupDescription: ''
      title: Delete
      description: 'Remove the specified user from storage.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer your_token'
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

name: 'Authentication JWT'
description: |-

  Routes for managing the authentication/registration of the user
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'Authentication JWT'
      groupDescription: |-

        Routes for managing the authentication/registration of the user
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Authenticate the user to the system'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: mhuels@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: PMA+/>Av)n=ds.mQ..`
        type: string
        custom: []
    cleanBodyParameters:
      email: mhuels@example.org
      password: PMA+/>Av)n=ds.mQ..`
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": "success",
          "user": {
          "id": 1,
          "name": "Westley Langosh",
          "email": "bartoletti.virginie@example.net",
          "email_verified_at": "2022-12-15T19:44:54.000000Z",
          "created_at": "2022-12-15T19:44:54.000000Z",
          "updated_at": "2022-12-15T19:44:54.000000Z",
          "roles": [
          {
          "id": 2,
          "name": "user",
          "guard_name": "api",
          "created_at": "2022-12-15T19:44:54.000000Z",
          "updated_at": "2022-12-15T19:44:54.000000Z",
          "pivot": {
          "model_id": 1,
          "role_id": 2,
          "model_type": "App\\Models\\User"
          }
          }
          ]
          },
          "authorisation": {
          "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbGFyYXZlbC12dWUtc3BhLnRlc3QvYXBpL2xvZ2luIiwiaWF0IjoxNjcxNjI2NzAyLCJleHAiOjE2NzE3MTMxMDIsIm5iZiI6MTY3MTYyNjcwMiwianRpIjoiMEhhZ0RBTW9wSWpXUDI3aSIsInN1YiI6IjEiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3Iiwicm9sZXMiOlsidXNlciJdfQ.ZBZSeI3a2yY2-bmoKH-4YQKF2elFajdx7_CHuKUU6vg",
          "type": "bearer"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "status": "error",
          "message": "Unauthorized"
          }
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'Authentication JWT'
      groupDescription: |-

        Routes for managing the authentication/registration of the user
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Register new user to the system'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: odtpjbckzovsrfibuk
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: rosendo92@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: 'j;]H$i>5dl\+`ar<S'
        type: string
        custom: []
    cleanBodyParameters:
      name: odtpjbckzovsrfibuk
      email: rosendo92@example.org
      password: 'j;]H$i>5dl\+`ar<S'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": "success",
          "message": "User created successfully",
          "user": {
          "name": "kitas",
          "email": "useris@email.comasdas",
          "updated_at": "2022-12-21T12:47:41.000000Z",
          "created_at": "2022-12-21T12:47:41.000000Z",
          "id": 103,
          "roles": [
          {
          "id": 2,
          "name": "user",
          "guard_name": "api",
          "created_at": "2022-12-15T19:44:54.000000Z",
          "updated_at": "2022-12-15T19:44:54.000000Z",
          "pivot": {
          "model_id": 103,
          "role_id": 2,
          "model_type": "App\\Models\\User"
          }
          }
          ]
          },
          "authorisation": {
          "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbGFyYXZlbC12dWUtc3BhLnRlc3QvYXBpL3JlZ2lzdGVyIiwiaWF0IjoxNjcxNjI2ODYxLCJleHAiOjE2NzE3MTMyNjEsIm5iZiI6MTY3MTYyNjg2MSwianRpIjoia0ZCTUVGMVNKckk0bDlHZCIsInN1YiI6IjEwMyIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjciLCJyb2xlcyI6WyJ1c2VyIl19.EDtYXP8g7LpIz8dxU71H_unhH9KXEebMsvC8l1AIO0I",
          "type": "bearer"
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: 'Authentication JWT'
      groupDescription: |-

        Routes for managing the authentication/registration of the user
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: 'Logout authenticated user'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer your_token'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": "success",
          "message": "Successfully logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/refresh
    metadata:
      groupName: 'Authentication JWT'
      groupDescription: |-

        Routes for managing the authentication/registration of the user
      subgroup: ''
      subgroupDescription: ''
      title: Refresh
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer your_token'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": "success",
          "user": {
          "id": 1,
          "name": "Westley Langosh",
          "email": "bartoletti.virginie@example.net",
          "email_verified_at": "2022-12-15T19:44:54.000000Z",
          "created_at": "2022-12-15T19:44:54.000000Z",
          "updated_at": "2022-12-15T19:44:54.000000Z"
          },
          "authorisation": {
          "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbGFyYXZlbC12dWUtc3BhLnRlc3QvYXBpL3JlZnJlc2giLCJpYXQiOjE2NzE2MjY0MTIsImV4cCI6MTY3MTcxMjgyMCwibmJmIjoxNjcxNjI2NDIwLCJqdGkiOiJ2MFExUW5RSWxoQzFzMXdYIiwic3ViIjoiMSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjciLCJyb2xlcyI6WyJ1c2VyIl19.1TvkMmjrMFxfnxkoYTsOgXbZbJpF7wOUB9N-Bw1s12w",
          "type": "bearer"
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Your token is invalid. Please, login again.",
          "success": false
          }
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
